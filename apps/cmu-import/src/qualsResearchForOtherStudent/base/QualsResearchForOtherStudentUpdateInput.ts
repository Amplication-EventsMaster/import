/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumQualsResearchForOtherStudentApproach } from "./EnumQualsResearchForOtherStudentApproach";
import {
  IsEnum,
  IsOptional,
  IsString,
  ValidateNested,
  IsInt,
} from "class-validator";
import { EnumQualsResearchForOtherStudentInsight } from "./EnumQualsResearchForOtherStudentInsight";
import { EnumQualsResearchForOtherStudentInterpretation } from "./EnumQualsResearchForOtherStudentInterpretation";
import { EnumQualsResearchForOtherStudentOverall } from "./EnumQualsResearchForOtherStudentOverall";
import { QualsCommitteeWhereUniqueInput } from "../../qualsCommittee/base/QualsCommitteeWhereUniqueInput";
import { Type } from "class-transformer";
import { EnumQualsResearchForOtherStudentStatus } from "./EnumQualsResearchForOtherStudentStatus";
import { EnumQualsResearchForOtherStudentUnderstanding } from "./EnumQualsResearchForOtherStudentUnderstanding";

@InputType()
class QualsResearchForOtherStudentUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumQualsResearchForOtherStudentApproach,
  })
  @IsEnum(EnumQualsResearchForOtherStudentApproach)
  @IsOptional()
  @Field(() => EnumQualsResearchForOtherStudentApproach, {
    nullable: true,
  })
  approach?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  approachExp?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchForOtherStudentInsight,
  })
  @IsEnum(EnumQualsResearchForOtherStudentInsight)
  @IsOptional()
  @Field(() => EnumQualsResearchForOtherStudentInsight, {
    nullable: true,
  })
  insight?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  insightExp?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchForOtherStudentInterpretation,
  })
  @IsEnum(EnumQualsResearchForOtherStudentInterpretation)
  @IsOptional()
  @Field(() => EnumQualsResearchForOtherStudentInterpretation, {
    nullable: true,
  })
  interpretation?:
    | "Excellent"
    | "Good"
    | "Satisfactory"
    | "Unsatisfactory"
    | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  interpretationExp?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchForOtherStudentOverall,
  })
  @IsEnum(EnumQualsResearchForOtherStudentOverall)
  @IsOptional()
  @Field(() => EnumQualsResearchForOtherStudentOverall, {
    nullable: true,
  })
  overall?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  overallExp?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  progress?: string | null;

  @ApiProperty({
    required: false,
    type: () => QualsCommitteeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => QualsCommitteeWhereUniqueInput)
  @IsOptional()
  @Field(() => QualsCommitteeWhereUniqueInput, {
    nullable: true,
  })
  qualsCommittee?: QualsCommitteeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchForOtherStudentStatus,
  })
  @IsEnum(EnumQualsResearchForOtherStudentStatus)
  @IsOptional()
  @Field(() => EnumQualsResearchForOtherStudentStatus, {
    nullable: true,
  })
  status?: "Satisfied" | "Progress" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  studentId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  summary?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchForOtherStudentUnderstanding,
  })
  @IsEnum(EnumQualsResearchForOtherStudentUnderstanding)
  @IsOptional()
  @Field(() => EnumQualsResearchForOtherStudentUnderstanding, {
    nullable: true,
  })
  understanding?:
    | "Excellent"
    | "Good"
    | "Satisfactory"
    | "Unsatisfactory"
    | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  understandingExp?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  urId?: number | null;
}

export { QualsResearchForOtherStudentUpdateInput as QualsResearchForOtherStudentUpdateInput };
