/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SemesterReference as PrismaSemesterReference,
} from "@prisma/client";

export class SemesterReferenceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SemesterReferenceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.semesterReference.count(args);
  }

  async semesterReferences<T extends Prisma.SemesterReferenceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterReferenceFindManyArgs>
  ): Promise<PrismaSemesterReference[]> {
    return this.prisma.semesterReference.findMany<Prisma.SemesterReferenceFindManyArgs>(
      args
    );
  }
  async semesterReference<T extends Prisma.SemesterReferenceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterReferenceFindUniqueArgs>
  ): Promise<PrismaSemesterReference | null> {
    return this.prisma.semesterReference.findUnique(args);
  }
  async createSemesterReference<T extends Prisma.SemesterReferenceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterReferenceCreateArgs>
  ): Promise<PrismaSemesterReference> {
    return this.prisma.semesterReference.create<T>(args);
  }
  async updateSemesterReference<T extends Prisma.SemesterReferenceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterReferenceUpdateArgs>
  ): Promise<PrismaSemesterReference> {
    return this.prisma.semesterReference.update<T>(args);
  }
  async deleteSemesterReference<T extends Prisma.SemesterReferenceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterReferenceDeleteArgs>
  ): Promise<PrismaSemesterReference> {
    return this.prisma.semesterReference.delete(args);
  }
}
