/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumQualsResearchApproach } from "./EnumQualsResearchApproach";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IntFilter } from "../../util/IntFilter";
import { EnumQualsResearchInsight } from "./EnumQualsResearchInsight";
import { EnumQualsResearchInterpretation } from "./EnumQualsResearchInterpretation";
import { EnumQualsResearchOverall } from "./EnumQualsResearchOverall";
import { QualsCommitteeWhereUniqueInput } from "../../qualsCommittee/base/QualsCommitteeWhereUniqueInput";
import { EnumQualsResearchStatus } from "./EnumQualsResearchStatus";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EnumQualsResearchUnderstanding } from "./EnumQualsResearchUnderstanding";

@InputType()
class QualsResearchWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumQualsResearchApproach,
  })
  @IsEnum(EnumQualsResearchApproach)
  @IsOptional()
  @Field(() => EnumQualsResearchApproach, {
    nullable: true,
  })
  approach?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  approachExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchInsight,
  })
  @IsEnum(EnumQualsResearchInsight)
  @IsOptional()
  @Field(() => EnumQualsResearchInsight, {
    nullable: true,
  })
  insight?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  insightExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchInterpretation,
  })
  @IsEnum(EnumQualsResearchInterpretation)
  @IsOptional()
  @Field(() => EnumQualsResearchInterpretation, {
    nullable: true,
  })
  interpretation?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  interpretationExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchOverall,
  })
  @IsEnum(EnumQualsResearchOverall)
  @IsOptional()
  @Field(() => EnumQualsResearchOverall, {
    nullable: true,
  })
  overall?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  overallExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  progress?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => QualsCommitteeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => QualsCommitteeWhereUniqueInput)
  @IsOptional()
  @Field(() => QualsCommitteeWhereUniqueInput, {
    nullable: true,
  })
  qualsCommittee?: QualsCommitteeWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchStatus,
  })
  @IsEnum(EnumQualsResearchStatus)
  @IsOptional()
  @Field(() => EnumQualsResearchStatus, {
    nullable: true,
  })
  status?: "Satisfied" | "Progress";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  studentId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  summary?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  timestamp?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsResearchUnderstanding,
  })
  @IsEnum(EnumQualsResearchUnderstanding)
  @IsOptional()
  @Field(() => EnumQualsResearchUnderstanding, {
    nullable: true,
  })
  understanding?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  understandingExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  urId?: IntNullableFilter;
}

export { QualsResearchWhereInput as QualsResearchWhereInput };
