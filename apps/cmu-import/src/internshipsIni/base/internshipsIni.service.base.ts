/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  InternshipsIni as PrismaInternshipsIni,
  StudentDatum as PrismaStudentDatum,
} from "@prisma/client";

export class InternshipsIniServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InternshipsIniCountArgs, "select">
  ): Promise<number> {
    return this.prisma.internshipsIni.count(args);
  }

  async internshipsInis<T extends Prisma.InternshipsIniFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIniFindManyArgs>
  ): Promise<PrismaInternshipsIni[]> {
    return this.prisma.internshipsIni.findMany<Prisma.InternshipsIniFindManyArgs>(
      args
    );
  }
  async internshipsIni<T extends Prisma.InternshipsIniFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIniFindUniqueArgs>
  ): Promise<PrismaInternshipsIni | null> {
    return this.prisma.internshipsIni.findUnique(args);
  }
  async createInternshipsIni<T extends Prisma.InternshipsIniCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIniCreateArgs>
  ): Promise<PrismaInternshipsIni> {
    return this.prisma.internshipsIni.create<T>(args);
  }
  async updateInternshipsIni<T extends Prisma.InternshipsIniUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIniUpdateArgs>
  ): Promise<PrismaInternshipsIni> {
    return this.prisma.internshipsIni.update<T>(args);
  }
  async deleteInternshipsIni<T extends Prisma.InternshipsIniDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIniDeleteArgs>
  ): Promise<PrismaInternshipsIni> {
    return this.prisma.internshipsIni.delete(args);
  }

  async getStudentData(parentId: number): Promise<PrismaStudentDatum | null> {
    return this.prisma.internshipsIni
      .findUnique({
        where: { id: parentId },
      })
      .studentData();
  }
}
