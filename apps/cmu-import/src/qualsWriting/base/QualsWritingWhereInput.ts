/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumQualsWritingEngagingReader } from "./EnumQualsWritingEngagingReader";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IntFilter } from "../../util/IntFilter";
import { EnumQualsWritingOrganization } from "./EnumQualsWritingOrganization";
import { EnumQualsWritingOverall } from "./EnumQualsWritingOverall";
import { QualsCommitteeWhereUniqueInput } from "../../qualsCommittee/base/QualsCommitteeWhereUniqueInput";
import { QualsWritingAspectListRelationFilter } from "../../qualsWritingAspect/base/QualsWritingAspectListRelationFilter";
import { EnumQualsWritingStatus } from "./EnumQualsWritingStatus";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EnumQualsWritingWritingStyle } from "./EnumQualsWritingWritingStyle";

@InputType()
class QualsWritingWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumQualsWritingEngagingReader,
  })
  @IsEnum(EnumQualsWritingEngagingReader)
  @IsOptional()
  @Field(() => EnumQualsWritingEngagingReader, {
    nullable: true,
  })
  engaging_reader?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  engagingReaderExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingOrganization,
  })
  @IsEnum(EnumQualsWritingOrganization)
  @IsOptional()
  @Field(() => EnumQualsWritingOrganization, {
    nullable: true,
  })
  organization?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  organizationExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingOverall,
  })
  @IsEnum(EnumQualsWritingOverall)
  @IsOptional()
  @Field(() => EnumQualsWritingOverall, {
    nullable: true,
  })
  overall?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  overallExp?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => QualsCommitteeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => QualsCommitteeWhereUniqueInput)
  @IsOptional()
  @Field(() => QualsCommitteeWhereUniqueInput, {
    nullable: true,
  })
  qualsCommittee?: QualsCommitteeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => QualsWritingAspectListRelationFilter,
  })
  @ValidateNested()
  @Type(() => QualsWritingAspectListRelationFilter)
  @IsOptional()
  @Field(() => QualsWritingAspectListRelationFilter, {
    nullable: true,
  })
  qualsWritingAspect?: QualsWritingAspectListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingStatus,
  })
  @IsEnum(EnumQualsWritingStatus)
  @IsOptional()
  @Field(() => EnumQualsWritingStatus, {
    nullable: true,
  })
  status?: "Satisfied" | "Progress";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  studentId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  summaryAudience?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  summaryTopic?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  timestamp?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  urId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingWritingStyle,
  })
  @IsEnum(EnumQualsWritingWritingStyle)
  @IsOptional()
  @Field(() => EnumQualsWritingWritingStyle, {
    nullable: true,
  })
  writing_style?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  writingStyleExp?: StringNullableFilter;
}

export { QualsWritingWhereInput as QualsWritingWhereInput };
