/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumQualsWritingEngagingReader } from "./EnumQualsWritingEngagingReader";
import {
  IsEnum,
  IsOptional,
  IsString,
  ValidateNested,
  IsInt,
} from "class-validator";
import { EnumQualsWritingOrganization } from "./EnumQualsWritingOrganization";
import { EnumQualsWritingOverall } from "./EnumQualsWritingOverall";
import { QualsCommitteeWhereUniqueInput } from "../../qualsCommittee/base/QualsCommitteeWhereUniqueInput";
import { Type } from "class-transformer";
import { QualsWritingAspectUpdateManyWithoutQualsWritingsInput } from "./QualsWritingAspectUpdateManyWithoutQualsWritingsInput";
import { EnumQualsWritingStatus } from "./EnumQualsWritingStatus";
import { EnumQualsWritingWritingStyle } from "./EnumQualsWritingWritingStyle";

@InputType()
class QualsWritingUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumQualsWritingEngagingReader,
  })
  @IsEnum(EnumQualsWritingEngagingReader)
  @IsOptional()
  @Field(() => EnumQualsWritingEngagingReader, {
    nullable: true,
  })
  engaging_reader?:
    | "Excellent"
    | "Good"
    | "Satisfactory"
    | "Unsatisfactory"
    | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  engagingReaderExp?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingOrganization,
  })
  @IsEnum(EnumQualsWritingOrganization)
  @IsOptional()
  @Field(() => EnumQualsWritingOrganization, {
    nullable: true,
  })
  organization?:
    | "Excellent"
    | "Good"
    | "Satisfactory"
    | "Unsatisfactory"
    | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  organizationExp?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingOverall,
  })
  @IsEnum(EnumQualsWritingOverall)
  @IsOptional()
  @Field(() => EnumQualsWritingOverall, {
    nullable: true,
  })
  overall?: "Excellent" | "Good" | "Satisfactory" | "Unsatisfactory" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  overallExp?: string | null;

  @ApiProperty({
    required: false,
    type: () => QualsCommitteeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => QualsCommitteeWhereUniqueInput)
  @IsOptional()
  @Field(() => QualsCommitteeWhereUniqueInput, {
    nullable: true,
  })
  qualsCommittee?: QualsCommitteeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => QualsWritingAspectUpdateManyWithoutQualsWritingsInput,
  })
  @ValidateNested()
  @Type(() => QualsWritingAspectUpdateManyWithoutQualsWritingsInput)
  @IsOptional()
  @Field(() => QualsWritingAspectUpdateManyWithoutQualsWritingsInput, {
    nullable: true,
  })
  qualsWritingAspect?: QualsWritingAspectUpdateManyWithoutQualsWritingsInput;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingStatus,
  })
  @IsEnum(EnumQualsWritingStatus)
  @IsOptional()
  @Field(() => EnumQualsWritingStatus, {
    nullable: true,
  })
  status?: "Satisfied" | "Progress" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  studentId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  summaryAudience?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  summaryTopic?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  urId?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumQualsWritingWritingStyle,
  })
  @IsEnum(EnumQualsWritingWritingStyle)
  @IsOptional()
  @Field(() => EnumQualsWritingWritingStyle, {
    nullable: true,
  })
  writing_style?:
    | "Excellent"
    | "Good"
    | "Satisfactory"
    | "Unsatisfactory"
    | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  writingStyleExp?: string | null;
}

export { QualsWritingUpdateInput as QualsWritingUpdateInput };
