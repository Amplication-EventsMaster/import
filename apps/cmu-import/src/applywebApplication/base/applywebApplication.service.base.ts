/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ApplywebApplication as PrismaApplywebApplication,
} from "@prisma/client";

export class ApplywebApplicationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ApplywebApplicationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.applywebApplication.count(args);
  }

  async applywebApplications<T extends Prisma.ApplywebApplicationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplywebApplicationFindManyArgs>
  ): Promise<PrismaApplywebApplication[]> {
    return this.prisma.applywebApplication.findMany<Prisma.ApplywebApplicationFindManyArgs>(
      args
    );
  }
  async applywebApplication<T extends Prisma.ApplywebApplicationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplywebApplicationFindUniqueArgs>
  ): Promise<PrismaApplywebApplication | null> {
    return this.prisma.applywebApplication.findUnique(args);
  }
  async createApplywebApplication<
    T extends Prisma.ApplywebApplicationCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ApplywebApplicationCreateArgs>
  ): Promise<PrismaApplywebApplication> {
    return this.prisma.applywebApplication.create<T>(args);
  }
  async updateApplywebApplication<
    T extends Prisma.ApplywebApplicationUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ApplywebApplicationUpdateArgs>
  ): Promise<PrismaApplywebApplication> {
    return this.prisma.applywebApplication.update<T>(args);
  }
  async deleteApplywebApplication<
    T extends Prisma.ApplywebApplicationDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ApplywebApplicationDeleteArgs>
  ): Promise<PrismaApplywebApplication> {
    return this.prisma.applywebApplication.delete(args);
  }
}
