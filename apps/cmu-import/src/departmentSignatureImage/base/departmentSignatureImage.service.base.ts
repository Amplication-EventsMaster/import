/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DepartmentSignatureImage as PrismaDepartmentSignatureImage,
} from "@prisma/client";

export class DepartmentSignatureImageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DepartmentSignatureImageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.departmentSignatureImage.count(args);
  }

  async departmentSignatureImages<
    T extends Prisma.DepartmentSignatureImageFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DepartmentSignatureImageFindManyArgs>
  ): Promise<PrismaDepartmentSignatureImage[]> {
    return this.prisma.departmentSignatureImage.findMany<Prisma.DepartmentSignatureImageFindManyArgs>(
      args
    );
  }
  async departmentSignatureImage<
    T extends Prisma.DepartmentSignatureImageFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DepartmentSignatureImageFindUniqueArgs>
  ): Promise<PrismaDepartmentSignatureImage | null> {
    return this.prisma.departmentSignatureImage.findUnique(args);
  }
  async createDepartmentSignatureImage<
    T extends Prisma.DepartmentSignatureImageCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DepartmentSignatureImageCreateArgs>
  ): Promise<PrismaDepartmentSignatureImage> {
    return this.prisma.departmentSignatureImage.create<T>(args);
  }
  async updateDepartmentSignatureImage<
    T extends Prisma.DepartmentSignatureImageUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DepartmentSignatureImageUpdateArgs>
  ): Promise<PrismaDepartmentSignatureImage> {
    return this.prisma.departmentSignatureImage.update<T>(args);
  }
  async deleteDepartmentSignatureImage<
    T extends Prisma.DepartmentSignatureImageDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DepartmentSignatureImageDeleteArgs>
  ): Promise<PrismaDepartmentSignatureImage> {
    return this.prisma.departmentSignatureImage.delete(args);
  }
}
