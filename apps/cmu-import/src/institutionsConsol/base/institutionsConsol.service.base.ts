/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InstitutionsConsol as PrismaInstitutionsConsol,
} from "@prisma/client";

export class InstitutionsConsolServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InstitutionsConsolCountArgs, "select">
  ): Promise<number> {
    return this.prisma.institutionsConsol.count(args);
  }

  async institutionsConsols<T extends Prisma.InstitutionsConsolFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.InstitutionsConsolFindManyArgs>
  ): Promise<PrismaInstitutionsConsol[]> {
    return this.prisma.institutionsConsol.findMany<Prisma.InstitutionsConsolFindManyArgs>(
      args
    );
  }
  async institutionsConsol<T extends Prisma.InstitutionsConsolFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.InstitutionsConsolFindUniqueArgs>
  ): Promise<PrismaInstitutionsConsol | null> {
    return this.prisma.institutionsConsol.findUnique(args);
  }
  async createInstitutionsConsol<T extends Prisma.InstitutionsConsolCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InstitutionsConsolCreateArgs>
  ): Promise<PrismaInstitutionsConsol> {
    return this.prisma.institutionsConsol.create<T>(args);
  }
  async updateInstitutionsConsol<T extends Prisma.InstitutionsConsolUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InstitutionsConsolUpdateArgs>
  ): Promise<PrismaInstitutionsConsol> {
    return this.prisma.institutionsConsol.update<T>(args);
  }
  async deleteInstitutionsConsol<T extends Prisma.InstitutionsConsolDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.InstitutionsConsolDeleteArgs>
  ): Promise<PrismaInstitutionsConsol> {
    return this.prisma.institutionsConsol.delete(args);
  }
}
