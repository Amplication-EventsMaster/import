/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AgendaItem as PrismaAgendaItem } from "@prisma/client";

export class AgendaItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AgendaItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.agendaItem.count(args);
  }

  async agendaItems<T extends Prisma.AgendaItemFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaItemFindManyArgs>
  ): Promise<PrismaAgendaItem[]> {
    return this.prisma.agendaItem.findMany<Prisma.AgendaItemFindManyArgs>(args);
  }
  async agendaItem<T extends Prisma.AgendaItemFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaItemFindUniqueArgs>
  ): Promise<PrismaAgendaItem | null> {
    return this.prisma.agendaItem.findUnique(args);
  }
  async createAgendaItem<T extends Prisma.AgendaItemCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaItemCreateArgs>
  ): Promise<PrismaAgendaItem> {
    return this.prisma.agendaItem.create<T>(args);
  }
  async updateAgendaItem<T extends Prisma.AgendaItemUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaItemUpdateArgs>
  ): Promise<PrismaAgendaItem> {
    return this.prisma.agendaItem.update<T>(args);
  }
  async deleteAgendaItem<T extends Prisma.AgendaItemDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaItemDeleteArgs>
  ): Promise<PrismaAgendaItem> {
    return this.prisma.agendaItem.delete(args);
  }
}
