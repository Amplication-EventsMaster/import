/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ContactInformation as PrismaContactInformation,
} from "@prisma/client";

export class ContactInformationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContactInformationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contactInformation.count(args);
  }

  async contactInformations<T extends Prisma.ContactInformationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactInformationFindManyArgs>
  ): Promise<PrismaContactInformation[]> {
    return this.prisma.contactInformation.findMany<Prisma.ContactInformationFindManyArgs>(
      args
    );
  }
  async contactInformation<T extends Prisma.ContactInformationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactInformationFindUniqueArgs>
  ): Promise<PrismaContactInformation | null> {
    return this.prisma.contactInformation.findUnique(args);
  }
  async createContactInformation<T extends Prisma.ContactInformationCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactInformationCreateArgs>
  ): Promise<PrismaContactInformation> {
    return this.prisma.contactInformation.create<T>(args);
  }
  async updateContactInformation<T extends Prisma.ContactInformationUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactInformationUpdateArgs>
  ): Promise<PrismaContactInformation> {
    return this.prisma.contactInformation.update<T>(args);
  }
  async deleteContactInformation<T extends Prisma.ContactInformationDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactInformationDeleteArgs>
  ): Promise<PrismaContactInformation> {
    return this.prisma.contactInformation.delete(args);
  }
}
