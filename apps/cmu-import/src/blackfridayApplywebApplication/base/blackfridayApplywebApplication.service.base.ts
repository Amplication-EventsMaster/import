/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  BlackfridayApplywebApplication as PrismaBlackfridayApplywebApplication,
} from "@prisma/client";

export class BlackfridayApplywebApplicationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BlackfridayApplywebApplicationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.blackfridayApplywebApplication.count(args);
  }

  async blackfridayApplywebApplications<
    T extends Prisma.BlackfridayApplywebApplicationFindManyArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.BlackfridayApplywebApplicationFindManyArgs
    >
  ): Promise<PrismaBlackfridayApplywebApplication[]> {
    return this.prisma.blackfridayApplywebApplication.findMany<Prisma.BlackfridayApplywebApplicationFindManyArgs>(
      args
    );
  }
  async blackfridayApplywebApplication<
    T extends Prisma.BlackfridayApplywebApplicationFindUniqueArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.BlackfridayApplywebApplicationFindUniqueArgs
    >
  ): Promise<PrismaBlackfridayApplywebApplication | null> {
    return this.prisma.blackfridayApplywebApplication.findUnique(args);
  }
  async createBlackfridayApplywebApplication<
    T extends Prisma.BlackfridayApplywebApplicationCreateArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.BlackfridayApplywebApplicationCreateArgs
    >
  ): Promise<PrismaBlackfridayApplywebApplication> {
    return this.prisma.blackfridayApplywebApplication.create<T>(args);
  }
  async updateBlackfridayApplywebApplication<
    T extends Prisma.BlackfridayApplywebApplicationUpdateArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.BlackfridayApplywebApplicationUpdateArgs
    >
  ): Promise<PrismaBlackfridayApplywebApplication> {
    return this.prisma.blackfridayApplywebApplication.update<T>(args);
  }
  async deleteBlackfridayApplywebApplication<
    T extends Prisma.BlackfridayApplywebApplicationDeleteArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.BlackfridayApplywebApplicationDeleteArgs
    >
  ): Promise<PrismaBlackfridayApplywebApplication> {
    return this.prisma.blackfridayApplywebApplication.delete(args);
  }
}
