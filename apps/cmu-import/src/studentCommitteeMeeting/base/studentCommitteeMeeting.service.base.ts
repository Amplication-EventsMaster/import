/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StudentCommitteeMeeting as PrismaStudentCommitteeMeeting,
} from "@prisma/client";

export class StudentCommitteeMeetingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StudentCommitteeMeetingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.studentCommitteeMeeting.count(args);
  }

  async studentCommitteeMeetings<
    T extends Prisma.StudentCommitteeMeetingFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.StudentCommitteeMeetingFindManyArgs>
  ): Promise<PrismaStudentCommitteeMeeting[]> {
    return this.prisma.studentCommitteeMeeting.findMany<Prisma.StudentCommitteeMeetingFindManyArgs>(
      args
    );
  }
  async studentCommitteeMeeting<
    T extends Prisma.StudentCommitteeMeetingFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.StudentCommitteeMeetingFindUniqueArgs>
  ): Promise<PrismaStudentCommitteeMeeting | null> {
    return this.prisma.studentCommitteeMeeting.findUnique(args);
  }
  async createStudentCommitteeMeeting<
    T extends Prisma.StudentCommitteeMeetingCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.StudentCommitteeMeetingCreateArgs>
  ): Promise<PrismaStudentCommitteeMeeting> {
    return this.prisma.studentCommitteeMeeting.create<T>(args);
  }
  async updateStudentCommitteeMeeting<
    T extends Prisma.StudentCommitteeMeetingUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.StudentCommitteeMeetingUpdateArgs>
  ): Promise<PrismaStudentCommitteeMeeting> {
    return this.prisma.studentCommitteeMeeting.update<T>(args);
  }
  async deleteStudentCommitteeMeeting<
    T extends Prisma.StudentCommitteeMeetingDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.StudentCommitteeMeetingDeleteArgs>
  ): Promise<PrismaStudentCommitteeMeeting> {
    return this.prisma.studentCommitteeMeeting.delete(args);
  }
}
