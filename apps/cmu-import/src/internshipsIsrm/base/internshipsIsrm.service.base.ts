/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  InternshipsIsrm as PrismaInternshipsIsrm,
  StudentDatum as PrismaStudentDatum,
} from "@prisma/client";

export class InternshipsIsrmServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InternshipsIsrmCountArgs, "select">
  ): Promise<number> {
    return this.prisma.internshipsIsrm.count(args);
  }

  async internshipsIsrms<T extends Prisma.InternshipsIsrmFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIsrmFindManyArgs>
  ): Promise<PrismaInternshipsIsrm[]> {
    return this.prisma.internshipsIsrm.findMany<Prisma.InternshipsIsrmFindManyArgs>(
      args
    );
  }
  async internshipsIsrm<T extends Prisma.InternshipsIsrmFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIsrmFindUniqueArgs>
  ): Promise<PrismaInternshipsIsrm | null> {
    return this.prisma.internshipsIsrm.findUnique(args);
  }
  async createInternshipsIsrm<T extends Prisma.InternshipsIsrmCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIsrmCreateArgs>
  ): Promise<PrismaInternshipsIsrm> {
    return this.prisma.internshipsIsrm.create<T>(args);
  }
  async updateInternshipsIsrm<T extends Prisma.InternshipsIsrmUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIsrmUpdateArgs>
  ): Promise<PrismaInternshipsIsrm> {
    return this.prisma.internshipsIsrm.update<T>(args);
  }
  async deleteInternshipsIsrm<T extends Prisma.InternshipsIsrmDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.InternshipsIsrmDeleteArgs>
  ): Promise<PrismaInternshipsIsrm> {
    return this.prisma.internshipsIsrm.delete(args);
  }

  async getStudentData(parentId: number): Promise<PrismaStudentDatum | null> {
    return this.prisma.internshipsIsrm
      .findUnique({
        where: { id: parentId },
      })
      .studentData();
  }
}
