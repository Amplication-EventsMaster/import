/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserRoleLookup as PrismaUserRoleLookup } from "@prisma/client";

export class UserRoleLookupServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserRoleLookupCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userRoleLookup.count(args);
  }

  async userRoleLookups<T extends Prisma.UserRoleLookupFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleLookupFindManyArgs>
  ): Promise<PrismaUserRoleLookup[]> {
    return this.prisma.userRoleLookup.findMany<Prisma.UserRoleLookupFindManyArgs>(
      args
    );
  }
  async userRoleLookup<T extends Prisma.UserRoleLookupFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleLookupFindUniqueArgs>
  ): Promise<PrismaUserRoleLookup | null> {
    return this.prisma.userRoleLookup.findUnique(args);
  }
  async createUserRoleLookup<T extends Prisma.UserRoleLookupCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleLookupCreateArgs>
  ): Promise<PrismaUserRoleLookup> {
    return this.prisma.userRoleLookup.create<T>(args);
  }
  async updateUserRoleLookup<T extends Prisma.UserRoleLookupUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleLookupUpdateArgs>
  ): Promise<PrismaUserRoleLookup> {
    return this.prisma.userRoleLookup.update<T>(args);
  }
  async deleteUserRoleLookup<T extends Prisma.UserRoleLookupDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleLookupDeleteArgs>
  ): Promise<PrismaUserRoleLookup> {
    return this.prisma.userRoleLookup.delete(args);
  }
}
