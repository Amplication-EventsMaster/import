/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { IntFilter } from "../../util/IntFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumEvaluationLetterStatus } from "./EnumEvaluationLetterStatus";
import { StudentDatumWhereUniqueInput } from "../../studentDatum/base/StudentDatumWhereUniqueInput";
import { EnumEvaluationLetterStudentRead } from "./EnumEvaluationLetterStudentRead";
import { StringFilter } from "../../util/StringFilter";

@InputType()
class EvaluationLetterWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  date?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  documentId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  performanceCode?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumEvaluationLetterStatus,
  })
  @IsEnum(EnumEvaluationLetterStatus)
  @IsOptional()
  @Field(() => EnumEvaluationLetterStatus, {
    nullable: true,
  })
  status?: "Draft" | "Completed" | "Edited" | "Finalized" | "Approved";

  @ApiProperty({
    required: false,
    type: () => StudentDatumWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StudentDatumWhereUniqueInput)
  @IsOptional()
  @Field(() => StudentDatumWhereUniqueInput, {
    nullable: true,
  })
  studentData?: StudentDatumWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumEvaluationLetterStudentRead,
  })
  @IsEnum(EnumEvaluationLetterStudentRead)
  @IsOptional()
  @Field(() => EnumEvaluationLetterStudentRead, {
    nullable: true,
  })
  student_read?: "Yes" | "No";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  text?: StringFilter;
}

export { EvaluationLetterWhereInput as EvaluationLetterWhereInput };
