/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, RawDatum as PrismaRawDatum } from "@prisma/client";

export class RawDatumServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RawDatumCountArgs, "select">): Promise<number> {
    return this.prisma.rawDatum.count(args);
  }

  async rawData<T extends Prisma.RawDatumFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RawDatumFindManyArgs>
  ): Promise<PrismaRawDatum[]> {
    return this.prisma.rawDatum.findMany<Prisma.RawDatumFindManyArgs>(args);
  }
  async rawDatum<T extends Prisma.RawDatumFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RawDatumFindUniqueArgs>
  ): Promise<PrismaRawDatum | null> {
    return this.prisma.rawDatum.findUnique(args);
  }
  async createRawDatum<T extends Prisma.RawDatumCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RawDatumCreateArgs>
  ): Promise<PrismaRawDatum> {
    return this.prisma.rawDatum.create<T>(args);
  }
  async updateRawDatum<T extends Prisma.RawDatumUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RawDatumUpdateArgs>
  ): Promise<PrismaRawDatum> {
    return this.prisma.rawDatum.update<T>(args);
  }
  async deleteRawDatum<T extends Prisma.RawDatumDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RawDatumDeleteArgs>
  ): Promise<PrismaRawDatum> {
    return this.prisma.rawDatum.delete(args);
  }
}
