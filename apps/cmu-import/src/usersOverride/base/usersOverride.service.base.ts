/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UsersOverride as PrismaUsersOverride } from "@prisma/client";

export class UsersOverrideServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UsersOverrideCountArgs, "select">
  ): Promise<number> {
    return this.prisma.usersOverride.count(args);
  }

  async usersOverrides<T extends Prisma.UsersOverrideFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOverrideFindManyArgs>
  ): Promise<PrismaUsersOverride[]> {
    return this.prisma.usersOverride.findMany<Prisma.UsersOverrideFindManyArgs>(
      args
    );
  }
  async usersOverride<T extends Prisma.UsersOverrideFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOverrideFindUniqueArgs>
  ): Promise<PrismaUsersOverride | null> {
    return this.prisma.usersOverride.findUnique(args);
  }
  async createUsersOverride<T extends Prisma.UsersOverrideCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOverrideCreateArgs>
  ): Promise<PrismaUsersOverride> {
    return this.prisma.usersOverride.create<T>(args);
  }
  async updateUsersOverride<T extends Prisma.UsersOverrideUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOverrideUpdateArgs>
  ): Promise<PrismaUsersOverride> {
    return this.prisma.usersOverride.update<T>(args);
  }
  async deleteUsersOverride<T extends Prisma.UsersOverrideDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOverrideDeleteArgs>
  ): Promise<PrismaUsersOverride> {
    return this.prisma.usersOverride.delete(args);
  }
}
