/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Area as PrismaArea,
  StudentDatum as PrismaStudentDatum,
} from "@prisma/client";

export class AreaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AreaCountArgs, "select">): Promise<number> {
    return this.prisma.area.count(args);
  }

  async areas<T extends Prisma.AreaFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AreaFindManyArgs>
  ): Promise<PrismaArea[]> {
    return this.prisma.area.findMany<Prisma.AreaFindManyArgs>(args);
  }
  async area<T extends Prisma.AreaFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AreaFindUniqueArgs>
  ): Promise<PrismaArea | null> {
    return this.prisma.area.findUnique(args);
  }
  async createArea<T extends Prisma.AreaCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AreaCreateArgs>
  ): Promise<PrismaArea> {
    return this.prisma.area.create<T>(args);
  }
  async updateArea<T extends Prisma.AreaUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AreaUpdateArgs>
  ): Promise<PrismaArea> {
    return this.prisma.area.update<T>(args);
  }
  async deleteArea<T extends Prisma.AreaDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AreaDeleteArgs>
  ): Promise<PrismaArea> {
    return this.prisma.area.delete(args);
  }

  async getStudentData(parentId: number): Promise<PrismaStudentDatum | null> {
    return this.prisma.area
      .findUnique({
        where: { id: parentId },
      })
      .studentData();
  }
}
