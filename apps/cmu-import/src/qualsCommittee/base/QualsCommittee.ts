/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsInt, IsString, IsOptional, ValidateNested } from "class-validator";
import { QualsResearch } from "../../qualsResearch/base/QualsResearch";
import { Type } from "class-transformer";
import { QualsResearchForOtherStudent } from "../../qualsResearchForOtherStudent/base/QualsResearchForOtherStudent";
import { QualsWriting } from "../../qualsWriting/base/QualsWriting";
import { StudentDatum } from "../../studentDatum/base/StudentDatum";

@ObjectType()
class QualsCommittee {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  memberType!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  overrideResearch!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  overrideSpeaking!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  overrideWriting!: number | null;

  @ApiProperty({
    required: false,
    type: () => [QualsResearch],
  })
  @ValidateNested()
  @Type(() => QualsResearch)
  @IsOptional()
  qualsResearch?: Array<QualsResearch>;

  @ApiProperty({
    required: false,
    type: () => [QualsResearchForOtherStudent],
  })
  @ValidateNested()
  @Type(() => QualsResearchForOtherStudent)
  @IsOptional()
  qualsResearchForOtherStudent?: Array<QualsResearchForOtherStudent>;

  @ApiProperty({
    required: false,
    type: () => [QualsWriting],
  })
  @ValidateNested()
  @Type(() => QualsWriting)
  @IsOptional()
  qualsWriting?: Array<QualsWriting>;

  @ApiProperty({
    required: true,
    type: () => StudentDatum,
  })
  @ValidateNested()
  @Type(() => StudentDatum)
  studentData?: StudentDatum;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  urId!: number;
}

export { QualsCommittee as QualsCommittee };
