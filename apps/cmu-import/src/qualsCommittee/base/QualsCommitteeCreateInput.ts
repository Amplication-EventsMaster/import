/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, IsInt, ValidateNested } from "class-validator";
import { QualsResearchCreateNestedManyWithoutQualsCommitteesInput } from "./QualsResearchCreateNestedManyWithoutQualsCommitteesInput";
import { Type } from "class-transformer";
import { QualsResearchForOtherStudentCreateNestedManyWithoutQualsCommitteesInput } from "./QualsResearchForOtherStudentCreateNestedManyWithoutQualsCommitteesInput";
import { QualsWritingCreateNestedManyWithoutQualsCommitteesInput } from "./QualsWritingCreateNestedManyWithoutQualsCommitteesInput";
import { StudentDatumWhereUniqueInput } from "../../studentDatum/base/StudentDatumWhereUniqueInput";

@InputType()
class QualsCommitteeCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  memberType?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  overrideResearch?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  overrideSpeaking?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  overrideWriting?: number | null;

  @ApiProperty({
    required: false,
    type: () => QualsResearchCreateNestedManyWithoutQualsCommitteesInput,
  })
  @ValidateNested()
  @Type(() => QualsResearchCreateNestedManyWithoutQualsCommitteesInput)
  @IsOptional()
  @Field(() => QualsResearchCreateNestedManyWithoutQualsCommitteesInput, {
    nullable: true,
  })
  qualsResearch?: QualsResearchCreateNestedManyWithoutQualsCommitteesInput;

  @ApiProperty({
    required: false,
    type: () =>
      QualsResearchForOtherStudentCreateNestedManyWithoutQualsCommitteesInput,
  })
  @ValidateNested()
  @Type(
    () =>
      QualsResearchForOtherStudentCreateNestedManyWithoutQualsCommitteesInput
  )
  @IsOptional()
  @Field(
    () =>
      QualsResearchForOtherStudentCreateNestedManyWithoutQualsCommitteesInput,
    {
      nullable: true,
    }
  )
  qualsResearchForOtherStudent?: QualsResearchForOtherStudentCreateNestedManyWithoutQualsCommitteesInput;

  @ApiProperty({
    required: false,
    type: () => QualsWritingCreateNestedManyWithoutQualsCommitteesInput,
  })
  @ValidateNested()
  @Type(() => QualsWritingCreateNestedManyWithoutQualsCommitteesInput)
  @IsOptional()
  @Field(() => QualsWritingCreateNestedManyWithoutQualsCommitteesInput, {
    nullable: true,
  })
  qualsWriting?: QualsWritingCreateNestedManyWithoutQualsCommitteesInput;

  @ApiProperty({
    required: true,
    type: () => StudentDatumWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StudentDatumWhereUniqueInput)
  @Field(() => StudentDatumWhereUniqueInput)
  studentData!: StudentDatumWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  urId!: number;
}

export { QualsCommitteeCreateInput as QualsCommitteeCreateInput };
