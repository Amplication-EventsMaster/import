/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SemesterDate as PrismaSemesterDate } from "@prisma/client";

export class SemesterDateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SemesterDateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.semesterDate.count(args);
  }

  async semesterDates<T extends Prisma.SemesterDateFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterDateFindManyArgs>
  ): Promise<PrismaSemesterDate[]> {
    return this.prisma.semesterDate.findMany<Prisma.SemesterDateFindManyArgs>(
      args
    );
  }
  async semesterDate<T extends Prisma.SemesterDateFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterDateFindUniqueArgs>
  ): Promise<PrismaSemesterDate | null> {
    return this.prisma.semesterDate.findUnique(args);
  }
  async createSemesterDate<T extends Prisma.SemesterDateCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterDateCreateArgs>
  ): Promise<PrismaSemesterDate> {
    return this.prisma.semesterDate.create<T>(args);
  }
  async updateSemesterDate<T extends Prisma.SemesterDateUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterDateUpdateArgs>
  ): Promise<PrismaSemesterDate> {
    return this.prisma.semesterDate.update<T>(args);
  }
  async deleteSemesterDate<T extends Prisma.SemesterDateDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SemesterDateDeleteArgs>
  ): Promise<PrismaSemesterDate> {
    return this.prisma.semesterDate.delete(args);
  }
}
