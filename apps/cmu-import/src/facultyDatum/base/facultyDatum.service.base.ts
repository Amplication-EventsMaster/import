/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FacultyDatum as PrismaFacultyDatum } from "@prisma/client";

export class FacultyDatumServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FacultyDatumCountArgs, "select">
  ): Promise<number> {
    return this.prisma.facultyDatum.count(args);
  }

  async facultyData<T extends Prisma.FacultyDatumFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FacultyDatumFindManyArgs>
  ): Promise<PrismaFacultyDatum[]> {
    return this.prisma.facultyDatum.findMany<Prisma.FacultyDatumFindManyArgs>(
      args
    );
  }
  async facultyDatum<T extends Prisma.FacultyDatumFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FacultyDatumFindUniqueArgs>
  ): Promise<PrismaFacultyDatum | null> {
    return this.prisma.facultyDatum.findUnique(args);
  }
  async createFacultyDatum<T extends Prisma.FacultyDatumCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FacultyDatumCreateArgs>
  ): Promise<PrismaFacultyDatum> {
    return this.prisma.facultyDatum.create<T>(args);
  }
  async updateFacultyDatum<T extends Prisma.FacultyDatumUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FacultyDatumUpdateArgs>
  ): Promise<PrismaFacultyDatum> {
    return this.prisma.facultyDatum.update<T>(args);
  }
  async deleteFacultyDatum<T extends Prisma.FacultyDatumDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FacultyDatumDeleteArgs>
  ): Promise<PrismaFacultyDatum> {
    return this.prisma.facultyDatum.delete(args);
  }
}
